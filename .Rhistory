library(rstan)
options(mc.cores=parallel::detectCores())
rstan_options(auto_write=TRUE)
library(MBESS)
library(MASS)
library(iaborrow)
library(iaborrow)
library(iaborrow)
library(iaborrow)
library(iaborrow)
n.HC        = 200
n.C1        = 50
n.T1        = 50
n.C2        = 100
n.T2        = 100
out.mean.HC = c(-0.6,-0.4,-0.2,0.0,0.2,0.4,0.6)
out.sd.HC   = 1
out.mean.C  = 0
out.sd.C    = 1
out.mean.T  = 0.46
out.sd.T    = 1
cov.mean.HC = c(0,0)
cov.sd.HC   = c(1,1)
cov.cor.HC  = cbind(c(1.0,0.5),c(0.5,1.0))
cov.mean.C  = c(0,0)
cov.sd.C    = c(1,1)
cov.cor.C   = cbind(c(1.0,0.5),c(0.5,1.0))
cov.mean.T  = c(0,0)
cov.sd.T    = c(1,1)
cov.cor.T   = cbind(c(1.0,0.5),c(0.5,1.0))
a0          = 0.5
chains      = 4
iter        = 2000
warmup      = floor(iter/2)
thin        = 1
alternative = "greater"
sig.level   = 0.05
w0          = seq(0,5,0.1)
accept.t1e  = 0.1
accept.pow  = 0.7
nsim        = 10
norm.reg1 <- norm.reg.conc()
norm.reg2 <- norm.reg.ext()
norm.reg3 <- norm.reg.hyb()
out.mean.T <- c(out.mean.C,out.mean.T)
ls1 <- length(out.mean.HC)
ls2 <- length(out.mean.T)
cov.vcov.HC <- MBESS::cor2cov(cor.mat=cov.cor.HC,sd=cov.sd.HC)
cov.vcov.C  <- MBESS::cor2cov(cor.mat=cov.cor.C,sd=cov.sd.C)
cov.vcov.T  <- MBESS::cor2cov(cor.mat=cov.cor.T,sd=cov.sd.T)
wei <- array(0,dim=c(nsim,ls1,ls2))
p1  <- array(0,dim=c(nsim,ls1,ls2))
p2  <- array(0,dim=c(nsim,ls1,ls2))
for(ss in 1:nsim){
for(s1 in 1:ls1){
for(s2 in 1:ls2){
out.HC <- rnorm(n.HC,out.mean.HC[s1],out.sd.HC)
out.C1 <- rnorm(n.C1,out.mean.C,out.sd.C)
out.T1 <- rnorm(n.T1,out.mean.T[s2],out.sd.T)
out.C2 <- c(out.C1,rnorm(n.C2-n.C1,out.mean.C,out.sd.C))
out.T2 <- c(out.T1,rnorm(n.T2-n.T1,out.mean.T[s2],out.sd.T))
cov.HC <- MASS::mvrnorm(n.HC,cov.mean.HC,cov.vcov.HC)
cov.C1 <- MASS::mvrnorm(n.C1,cov.mean.C,cov.vcov.C)
cov.T1 <- MASS::mvrnorm(n.T1,cov.mean.T,cov.vcov.T)
cov.C2 <- rbind(cov.C1,MASS::mvrnorm(n.C2-n.C1,cov.mean.C,cov.vcov.C))
cov.T2 <- rbind(cov.T1,MASS::mvrnorm(n.T2-n.T1,cov.mean.T,cov.vcov.T))
dat1 <- list(
n = n.C1+n.T1,
p = ncol(cov.C1),
x = rbind(cov.C1,cov.T1),
z = c(rep(0,n.C1),rep(1,n.T1)),
y = c(out.C1,out.T1))
dat2 <- list(
nHC = n.HC,
pHC = ncol(cov.HC),
xHC = cov.HC,
yHC = out.HC,
a0  = a0)
dat3 <- list(
n   = n.C1+n.T1,
p   = ncol(cov.C1),
x   = rbind(cov.C1,cov.T1),
z   = c(rep(0,n.C1),rep(1,n.T1)),
y   = c(out.C1,out.T1),
nHC = n.HC,
xHC = cov.HC,
yHC = out.HC,
a0  = a0)
dat4 <- list(
n = n.C2+n.T2,
p = ncol(cov.C2),
x = rbind(cov.C2,cov.T2),
z = c(rep(0,n.C2),rep(1,n.T2)),
y = c(out.C2,out.T2))
mcmc1 <- rstan::sampling(norm.reg1,dat1,chains=chains,iter=iter,warmup=warmup,thin=thin,show_messages=FALSE)
mcmc1.sample <- rstan::extract(mcmc1)
mcmc2 <- rstan::sampling(norm.reg2,dat2,chains=chains,iter=iter,warmup=warmup,thin=thin,show_messages=FALSE)
mcmc2.sample <- rstan::extract(mcmc2)
mcmc3 <- rstan::sampling(norm.reg3,dat3,chains=chains,iter=iter,warmup=warmup,thin=thin,show_messages=FALSE)
mcmc3.sample <- rstan::extract(mcmc3)
mcmc4 <- rstan::sampling(norm.reg1,dat4,chains=chains,iter=iter,warmup=warmup,thin=thin,show_messages=FALSE)
mcmc4.sample <- rstan::extract(mcmc4)
hat.alpha0 <- median(mcmc2.sample$alpha)
hat.beta0  <- apply(mcmc2.sample$beta,2,median)
hat.alpha1 <- median(mcmc1.sample$alpha)
hat.gamma1 <- median(mcmc1.sample$gamma)
hat.beta1  <- apply(mcmc1.sample$beta,2,median)
hat.alpha <- median(mcmc3.sample$alpha)
hat.gamma <- median(mcmc3.sample$gamma)
hat.beta  <- apply(mcmc3.sample$beta,2,median)
m1 <- hat.alpha1+dat1$z*hat.gamma1+(dat1$x)%*%hat.beta1
m2 <- hat.alpha0                  +(dat2$x)%*%hat.beta0
m3 <- hat.alpha +dat1$z*hat.gamma +(dat1$x)%*%hat.beta
m4 <- hat.alpha                   +(dat2$x)%*%hat.beta
sig1 <- median(mcmc1.sample$sigma)
sig2 <- median(mcmc2.sample$sigma)
sig3 <- median(mcmc3.sample$sigma)
sig4 <- median(mcmc3.sample$sigma)
wei[ss,s1,s2] <- (sum(log(dnorm(dat1$y,m1,sig1)))+a0*sum(log(dnorm(dat2$y,m2,sig2)))
-sum(log(dnorm(dat1$y,m3,sig3)))-a0*sum(log(dnorm(dat2$y,m4,sig4))))
if(alternative=="greater"){
p1[ss,s1,s2] <- mean(mcmc3.sample$gamma>0)
p2[ss,s1,s2] <- mean(mcmc4.sample$gamma>0)
}else if(alternative=="less"){
p1[ss,s1,s2] <- mean(mcmc3.sample$gamma<0)
p2[ss,s1,s2] <- mean(mcmc4.sample$gamma<0)
}
}}}
r1 <- (p1>(1-sig.level))
r2 <- (p2>(1-sig.level))
lw        <- length(w0)
sig.rate  <- array(0,dim=c(2,lw,ls1))
max.t1e   <- numeric(lw)
min.pow   <- numeric(lw)
stop.rate <- array(0,dim=c(2,lw,ls1))
for(i in 1:lw){
sig.rate[1,i,]  <- apply(r1[,,1]*(wei[,,1]<=w0[i])+r2[,,1]*(wei[,,1]>w0[i]),2,mean)
sig.rate[2,i,]  <- apply(r1[,,2]*(wei[,,2]<=w0[i])+r2[,,2]*(wei[,,2]>w0[i]),2,mean)
max.t1e[i]      <- max(sig.rate[1,i,])
min.pow[i]      <- min(sig.rate[2,i,])
stop.rate[1,i,] <- apply(wei[,,1]<=w0[i],2,mean)
stop.rate[2,i,] <- apply(wei[,,2]<=w0[i],2,mean)
}
w0.opt <- max(w0[(max.t1e<accept.t1e)&(min.pow>accept.pow)])
w0.flg <- which(w0==w0.opt)
accept.t1e
max.t1e
(max.t1e<accept.t1e)
min.pow
w0.opt <- max(w0[(max.t1e<=accept.t1e)&(min.pow>=accept.pow)])
w0.flg <- which(w0==w0.opt)
w0.flg
t1e           <- sig.rate[1,w0.flg,]
stop.null     <- apply(wei[,,1]<=w0.opt,2,mean)
exp.size.null <- stop.null*(n.C1+n.T1)+(1-stop.null)*(n.C2+n.T2)
pow          <- sig.rate[2,w0.flg,]
stop.alt     <- apply(wei[,,2]<=w0.opt,2,mean)
exp.size.alt <- stop.alt*(n.C1+n.T1)+(1-stop.alt)*(n.C2+n.T2)
exp.size.null
exp.size.alt
library(iaborrow)
library(iaborrow)
library(iaborrow)
library(iaborrow)
library(iaborrow)
library(iaborrow)
library(iaborrow)
library(iaborrow)
library(iaborrow)
